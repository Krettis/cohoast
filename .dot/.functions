#/bin/bash

function parse_yaml {
   local prefix=$2
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\):|\1|" \
        -e "s|^\($s\)\($w\)$s:$s[\"']\(.*\)[\"']$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
         printf("%s%s%s=\"%s\"\n", "'$prefix'",vn, $2, $3);
      }
   }'
}

function backup_host_file {

	local backup_file=$1
	current_time=$(date "+%Y%m%d-%H%M%S")
	backup_comment=$(printf "# This is a backup from %s , made automatically. Only use this when the host file seems to be broken\n" $current_time)
	echo $backup_comment > $backup_file
	cat $HOSTS_FILE >> $backup_file

}


giveprompt(){

	givehint=""
	if [[ -n "$2" ]]; then
		givehint="[$2] "
	fi 
	
	question=$1" $givehint: "
	default=$2
	read -p "$question" answer
       if [ -z "$answer" ];then
	       answer=$default
       fi	
       echo $answer;
}



function in_array() {
    local n=$#
    local value=${!n}
    for ((i=1;i < $#;i++)) {
        if [ "${!i}" == "${value}" ]; then
            echo "y"
            return 0
        fi
    }
    echo "n"
    return 1
}

chfn_exists()
{
	result="`type -t $1`"
	if [ "$result" == 'function' ]; then
		return 0
	else
		return 1
	fi
}
